# ============================================
# RESTAURANTE SAAS - ENVIRONMENT VARIABLES
# ============================================
#
# Este arquivo contém todas as variáveis de ambiente necessárias
# para executar uma instância do sistema.
#
# INSTRUÇÕES:
# 1. Copie este arquivo para .env
# 2. Preencha todas as variáveis com valores reais
# 3. NUNCA commite o arquivo .env no git
#
# Para múltiplas empresas, crie arquivos separados:
# - .env.empresa1
# - .env.empresa2
# etc.
#

# ============================================
# DOMAINS / URLs
# ============================================
# Domínios para acesso à aplicação
# Exemplos:
#   - empresa1.meurestaurante.com
#   - restaurante-joao.com.br
#   - pdv.pizzariadosul.com

FRONTEND_DOMAIN=r.chatwell.pro
BACKEND_DOMAIN=rapi.chatwell.pro
FRONTEND_URL=https://r.chatwell.pro

# ============================================
# DATABASE
# ============================================
# Senha do PostgreSQL (altere para uma senha forte)

POSTGRES_PASSWORD=postgres123

# ============================================
# SECURITY
# ============================================
# JWT Secret (use um valor aleatório e seguro)
# Gere com: openssl rand -base64 32

JWT_SECRET=jwt-secret-key-muito-segura-change-me

# ============================================
# FILE STORAGE (Armazenamento de Imagens)
# ============================================
# Escolha o provider: local, minio, ou s3
# - local: Armazena no filesystem do servidor (desenvolvimento)
# - minio: MinIO server (auto-hospedado, compatível com S3)
# - s3: Amazon AWS S3 (produção, gerenciado)

STORAGE_PROVIDER=local

# -------- LOCAL STORAGE (quando STORAGE_PROVIDER=local) --------
# Diretório onde os arquivos serão salvos
LOCAL_STORAGE_PATH=./uploads
# URL base para acessar os arquivos
LOCAL_STORAGE_BASE_URL=https://rapi.chatwell.pro/uploads

# -------- AWS S3 (quando STORAGE_PROVIDER=s3) --------
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_S3_BUCKET=your-bucket-name

# -------- MINIO (quando STORAGE_PROVIDER=minio) --------
# URL do servidor MinIO (exemplo: http://minio:9000 ou https://minio.empresa.com)
S3_ENDPOINT=http://minio:9000
# Região do MinIO (pode ser qualquer valor, ex: us-east-1)
S3_REGION=us-east-1
# Credenciais de acesso do MinIO
S3_ACCESS_KEY_ID=minioadmin
S3_SECRET_ACCESS_KEY=minioadmin
# Nome do bucket no MinIO
S3_BUCKET=restaurante-uploads
# Forçar path style para MinIO (sempre true para MinIO)
S3_FORCE_PATH_STYLE=true

# ============================================
# SMTP (Email)
# ============================================
# Configurações de email para recuperação de senha

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM=Restaurante SaaS <noreply@yourcompany.com>

# ============================================
# OBSERVAÇÕES IMPORTANTES
# ============================================
#
# 1. FRONTEND_DOMAIN e BACKEND_DOMAIN devem apontar para o servidor
#    via DNS antes do deploy
#
# 2. O Traefik irá gerar certificados SSL automaticamente para
#    os domínios configurados
#
# 3. POSTGRES_PASSWORD deve ser a mesma em todas as instâncias
#    se compartilharem o mesmo banco de dados
#
# 4. JWT_SECRET deve ser único por instância se você quiser que
#    os tokens não sejam compartilhados entre empresas
#
# 5. Para AWS S3, você pode usar o mesmo bucket para todas as
#    empresas ou buckets separados (recomendado para isolamento)
#
